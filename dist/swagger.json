{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0",
        "title": "IN MEMORY CRUD REST SERVICE WITH VALIDATION",
        "description": ""
    },
    "servers": [
        {
            "url": "/",
            "description": "Local Dev"
        }
    ],
    "tags": [
        {
            "name": "User",
            "description": "A simple REST service withCRUD operations for User entity"
        },
        {
            "name": "Users",
            "description": "Operations with list of users"
        }
    ],
    "consumes": ["application/json"],
    "produces": ["application/json"],
    "paths": {
        "/users": {
            "get": {
                "tags": ["Users"],
                "summary": "Get auto suggested filtered list of users",
                "parameters": [
                    {
                        "name": "loginSubstring",
                        "in": "path",
                        "required": true,
                        "description": "Login substring that we want to match to the login of users",
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "path",
                        "required": true,
                        "description": "The maximum number of the users that we want to get",
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Params"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad request"
                    }
                }
            },
            "post": {
                "tags": ["Users"],
                "summary": "Create new User",
                "requestBody": {
                    "description": "User Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/UserInRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad request"
                    }
                }
            }
        },
        "/users/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "ID of the user that we want to match",
                    "type": "string"
                }
            ],
            "get": {
                "tags": ["User"],
                "summary": "Get user with given ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "User with id",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "404": {
                        "description": "Failed. User not found."
                    }
                }
            },
            "put": {
                "summary": "Update user with given ID",
                "tags": ["User"],
                "requestBody": {
                    "description": "User Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "User with new values of properties",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    },
                    "404": {
                        "description": "Failed. User not found."
                    }
                }
            },
            "delete": {
                "summary": "Delete user with given ID",
                "tags": ["User"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Delete User with id",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "404": {
                        "description": "Failed. User not found."
                    }
                }
            }
        }
    },
    "definitions": {
        "id": {
            "properties": {
                "uuid": {
                    "type": "string"
                }
            }
        },
        "Params": {
            "type": "object",
            "properties": {
                "loginSubstring": {
                    "type": "string"
                },
                "limit": {
                    "type": "string"
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "uuid": {
                    "type": "string"
                },
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "age": {
                    "type": "number"
                },
                "isDeleted": {
                    "type": "boolean"
                }
            }
        },
        "UserInRequestBody": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "age": {
                    "type": "number"
                },
                "isDeleted": {
                    "type": "boolean"
                }
            }
        }
    }
}
